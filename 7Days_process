// This is a demonstration on how to use an input device to trigger changes on your neo pixels.
// You should wire a momentary push button to connect from ground to a digital IO pin.  When you
// press the button it will change to a new pixel animation.  Note that you need to press the
// button once to start the first animation!

#include <Adafruit_NeoPixel.h>

#define BUTTON_PIN   12    // Digital IO pin connected to the button.  This will be
// driven with a pull-up resistor so the switch should
// pull the pin to ground momentarily.  On a high -> low
// transition the button press logic will execute.

#define PIXEL_PIN1   6    // Digital IO pin connected to the NeoPixels.
#define PIXEL_PIN2   7

#define PIXEL_COUNT 24

// Parameter 1 = number of pixels in strip,  neopixel stick has 8
// Parameter 2 = pin number (most are valid)
// Parameter 3 = pixel type flags, add together as needed:
//   NEO_KHZ400  400 KHz bitstream (e.g. FLORA pixels)
//   NEO_KHZ800  800 KHz bitstream (e.g. High Density LED strip), correct for neopixel stick
Adafruit_NeoPixel strip1 = Adafruit_NeoPixel(PIXEL_COUNT, PIXEL_PIN1, NEO_GRBW + NEO_KHZ800);
Adafruit_NeoPixel strip2 = Adafruit_NeoPixel(PIXEL_COUNT, PIXEL_PIN2, NEO_GRBW + NEO_KHZ800);

// R,G,B,W
const uint32_t RED = strip1.Color(255, 0, 0, 0);
const uint32_t GREEN = strip1.Color(0, 127, 0, 0);
const uint32_t BLUE = strip1.Color(0, 72, 130, 0);
const uint32_t PURPLE = strip1.Color(158, 8, 148, 0);
const uint32_t YELLOW = strip1.Color(255, 100, 0, 0);

const int Days = 7;

boolean oldState = LOW;
unsigned int showType = 0;

void setup() {
  Serial.begin( 9600);

  pinMode(BUTTON_PIN, INPUT_PULLUP);
  strip1.begin();
  strip1.show();
  strip2.begin();
  strip2.show();// Initialize all pixels to 'off'
}

void loop() {
  // debug
  if (Serial.available() > 0) {
    int val = Serial.read() ;
    if (val >= '0' && val <= '9') {
      showType = val - '0';
      Serial.print("MAN ");Serial.println(showType);
      startShow(showType  );
    }
  }

  // Get current button state.
  bool newState = digitalRead(BUTTON_PIN);
  //Serial.println(newState);
  
  // Check if state changed from high to low (button press).
  if (newState == LOW && oldState == HIGH) {
    // Short delay to debounce button.
    delay(20);
    // Check if button is still low after debounce.
    newState = digitalRead(BUTTON_PIN);

    if (newState == LOW) {
      showType++;
      if (showType > Days) { // days
        showType = 1;
      }
      Serial.print(showType, HEX); Serial.println(" ");

      startShow(showType);
    }
  }

  // Set the last button state to the old state.
  oldState = newState;
}

void startShow(int i) {
  switch (i) {

    case 1:
      theaterChase(strip1, RED, 50);  // Red (strip1)
      off(strip1);    // Black/off
      theaterChase(strip2, BLUE, 50); // Blue
      // strip3 green here
      off(strip2);    // Black/off
      break;

    case 2:
      theaterChase(strip1, RED, 50);  // Red (strip1)
      off(strip1);    // Black/off
      theaterChase(strip2, PURPLE, 50);    // purple
      off(strip2);    // Black/off
      // theaterChase(strip3, strip3.Color(0x4B, 0x0, 0x82, 0), 50);  // Blue
      // strip3 green here
      //off(strip3);    // Black/off
      break;

    case 3:
      //strip1.green
      theaterChase(strip1, GREEN, 50);
      off(strip1);    // Black/off
      theaterChase(strip2, BLUE, 70);  // Blue
      off(strip2);    // Black/off
      // theaterChase(strip3, PURPLE, 50);    // purple
      // off(strip3);    // Black/off
      break;


      theaterChase(strip1, YELLOW, 70); // Yellow
      break;


    case 4: theaterChase(strip2, strip1.Color(0, 0, 0, 0), 50);    // Black/off

      break;
    case 5: theaterChase(strip2, strip2.Color(8, 158, 148, 0), 50);    // purple
      break;

    case 6: theaterChase(strip2, strip2.Color(127, 127, 127, 0), 50); // White
      break;
    case 7: theaterChase(strip2, strip2.Color(0, 0, 0, 0), 50);    // Black/off
      break;

    case 9:
      // to check wiring
      Serial. println("Type something to stop");
      while (Serial.available() > 0) {
        Serial.read();   // eol
      }
      while (Serial.available() <= 0) {
        theaterChase(strip1, RED, 20);
        theaterChase(strip1, GREEN, 20);
        theaterChase(strip1, strip1.Color(0, 0, 127, 0), 20);

        theaterChase(strip2, RED, 20);
        theaterChase(strip2, GREEN, 20);
        theaterChase(strip2, strip2.Color(0, 0, 127, 0), 20);
      }
      break;

  }
}

//Fill the dots one after the other with a color
void off(Adafruit_NeoPixel & strip) {
  uint32_t c = strip1.Color(0, 0, 0, 0);
  for (uint16_t i = 0; i < strip.numPixels(); i++) {
    strip.setPixelColor(i, c);
  }
  strip.show();
}

//Theatre-style crawling lights.
void theaterChase(Adafruit_NeoPixel & strip, uint32_t color, uint8_t wait) {
  for (int j = 0; j < 7; j++) { //do 7 cycles of chasing
    for (int q = 0; q < 3; q++) {
      for (int i = 0; i < strip1.numPixels(); i = i + 3) {
        strip.setPixelColor(i + q, color);
      }
      strip.show();

      delay(wait);

      for (int i = 0; i < strip1.numPixels(); i = i + 3)
        for (int i = 0; i < strip2.numPixels(); i = i + 3) {
          strip.setPixelColor(i + q, 0);
        }
    }
  }
}
